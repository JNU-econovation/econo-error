version: '3.1'
services:
  mysql:
    container_name: error-mysql-dev
    image: mysql/mysql-server:8.0.27
    environment:
      - MYSQL_DATABASE=error
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=root
    command: [ "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--lower_case_table_names=1", "--max_connections=2048", "--wait_timeout=3600" ]
    ports:
      - "13306:3306"
    volumes: #볼륨 지정
      - ./resources/develop-environment/mysql-init.d:/docker-entrypoint-initdb.d
    networks: #사용할 네트워크 지정
      - error-network

  redis:
    container_name: redis
    image: redis:latest
    expose:
      - "6379"
    environment:
      - REDIS_PASSWORD=root
    networks:
      - error-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: 404-error-dev
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://error-mysql-dev:3306/error?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_PROFILES_ACTIVE: dev
      SPRING_REDIS_HOST: error-redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: root


    networks: #사용할 네트워크 지정
      - error-network
#
#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:v0.47.0
#    container_name: cAdvisor
#    privileged: true
#    command:
#      - '-port=8090'
#    ports:
#      - "8090:8090"
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#      - /dev/disk/:/dev/disk:ro
#    networks:
#      - error-network
#
#  prometheus:
#    image: prom/prometheus:v2.44.0
#    container_name: prometheus
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#      - ./prometheus/alert_rules.yml:/prometheus/alert_rules.yml
#    networks:
#      - error-network
#
#  grafana:
#    image: grafana/grafana:9.5.2
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./grafana/provisioning/datasources/:/etc/grafana/provisioning/datasources/
#      - ./grafana/provisioning/dashboards/:/etc/grafana/provisioning/dashboards/
#      - ./grafana/data/:/var/lib/grafana/dashboards/
#    environment:
#      - GF_AUTH_BASIC_ENABLED=false
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Editor
#    networks:
#      - error-network

networks:
  error-network:
