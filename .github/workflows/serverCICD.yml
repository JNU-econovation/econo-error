# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Error CICD CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      working-directory: ./BE/error
      run: chmod +x ./gradlew
      shell: bash

    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

      ## gradle build
    - name: Build with Gradle
      working-directory: ./BE/error
      run: ./gradlew build -x test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: v0.7.0
    
    - name: Docker build & push to dev
      working-directory: ./BE/error
      if: contains(github.ref, 'main')
      run: | 
        docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/econo-error .
        docker push ${{ secrets.DOCKER_REPO }}/econo-error

    - name: serve in ec2 used for script
      uses: appleboy/ssh-action@master
      id: deploy-dev
      if: contains(github.ref, 'main')
      with:
        host: ${{ secrets.HOST_DEV_IP }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 22
        working-directory: ./BE/
        script: |
          pwd && ll
          cd econo-error/BE/error
          sudo usermod -a -G docker $USER
          docker pull ${{ secrets.DOCKER_REPO }}/econo-error
          docker-compose up -d
          docker image prune -f
